{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"untrusted","disambiguator":[10385210579140820462,3402417110622996457]},"crate_root":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/untrusted-0.6.1/src","external_crates":[{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/untrusted-0.6.1/src/untrusted.rs","num":1,"id":{"name":"core","disambiguator":[2153668756788574171,2288043478962111168]}}],"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":770,"byte_end":16557,"line_start":15,"line_end":450,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":770,"byte_end":16557,"line_start":15,"line_end":450,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/untrusted-0.6.1/src/untrusted.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":74},{"krate":0,"index":86},{"krate":0,"index":84},{"krate":0,"index":80},{"krate":0,"index":76},{"krate":0,"index":6},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":96},{"krate":0,"index":112},{"krate":0,"index":110},{"krate":0,"index":106},{"krate":0,"index":102},{"krate":0,"index":98},{"krate":0,"index":54}],"decl_id":null,"docs":" untrusted.rs: Safe, fast, zero-panic, zero-crashing, zero-allocation\n parsing of untrusted inputs in Rust.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations, missing_debug_implementations)","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":4944,"byte_end":5025,"line_start":88,"line_end":91,"column_start":1,"column_end":3}},{"value":"deny(unused_qualifications)","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":5098,"byte_end":5136,"line_start":94,"line_end":96,"column_start":1,"column_end":3}},{"value":"forbid(anonymous_parameters,\n         box_pointers,\n         fat_ptr_transmutes,\n         legacy_directory_ownership,\n         missing_docs,\n         trivial_casts,\n         trivial_numeric_casts,\n         unsafe_code,\n         unstable_features,\n         unused_extern_crates,\n         unused_import_braces,\n         unused_results,\n         variant_size_differences,\n         warnings)","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":5138,"byte_end":5471,"line_start":98,"line_end":113,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":5473,"byte_end":5483,"line_start":115,"line_end":115,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":5648,"byte_end":5653,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"Input","qualname":"::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":61}],"decl_id":null,"docs":" A wrapper around `&'a [u8]` that helps in writing panic-free code.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":5637,"byte_end":5692,"line_start":121,"line_end":123,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":5787,"byte_end":5791,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"from","qualname":"<Input<'a>>::from","value":"fn (bytes: &'a [u8]) -> Input<'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":6420,"byte_end":6428,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Input<'a>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":6540,"byte_end":6544,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"iter","qualname":"<Input<'a>>::iter","value":"fn (&self) -> <&[u8] as IntoIterator>::IntoIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":6692,"byte_end":6695,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"len","qualname":"<Input<'a>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":6942,"byte_end":6950,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"read_all","qualname":"<Input<'a>>::read_all","value":"fn <F, R, E> (&self, incomplete_read: E, read: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":7390,"byte_end":7402,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"read_all_mut","qualname":"<Input<'a>>::read_all_mut","value":"fn <F, R, E> (&self, incomplete_read: E, mut read: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":7999,"byte_end":8017,"line_start":183,"line_end":183,"column_start":12,"column_end":30},"name":"as_slice_less_safe","qualname":"<Input<'a>>::as_slice_less_safe","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":8806,"byte_end":8823,"line_start":210,"line_end":210,"column_start":8,"column_end":25},"name":"read_all_optional","qualname":"::read_all_optional","value":"fn <F, R, E> (input: Option<Input>, incomplete_read: E, read: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Calls `read` with the given input as a `Reader`, ensuring that `read`\n consumed the entire input. When `input` is `None`, `read` will be\n called with `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":10108,"byte_end":10114,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"Reader","qualname":"::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75}],"decl_id":null,"docs":" A read-only, forward-only* cursor into the data in an `Input`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":10238,"byte_end":10242,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"Mark","qualname":"::Mark","value":"Mark {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":" An index into the already-parsed input of a `Reader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":10475,"byte_end":10478,"line_start":258,"line_end":258,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<'a>>::new","value":"fn (input: Input<'a>) -> Reader<'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":10685,"byte_end":10691,"line_start":265,"line_end":265,"column_start":12,"column_end":18},"name":"at_end","qualname":"<Reader<'a>>::at_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":10873,"byte_end":10896,"line_start":270,"line_end":270,"column_start":12,"column_end":35},"name":"get_input_between_marks","qualname":"<Reader<'a>>::get_input_between_marks","value":"fn (&self, mark1: Mark, mark2: Mark) -> Result<Input<'a>, EndOfInput>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":11292,"byte_end":11296,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"mark","qualname":"<Reader<'a>>::mark","value":"fn (&self) -> Mark","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":11478,"byte_end":11482,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"peek","qualname":"<Reader<'a>>::peek","value":"fn (&self, b: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":11820,"byte_end":11829,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"read_byte","qualname":"<Reader<'a>>::read_byte","value":"fn (&mut self) -> Result<u8, EndOfInput>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":12273,"byte_end":12277,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"skip","qualname":"<Reader<'a>>::skip","value":"fn (&mut self, num_bytes: usize) -> Result<(), EndOfInput>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":12642,"byte_end":12660,"line_start":317,"line_end":317,"column_start":12,"column_end":30},"name":"skip_and_get_input","qualname":"<Reader<'a>>::skip_and_get_input","value":"fn (&mut self, num_bytes: usize) -> Result<Input<'a>, EndOfInput>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":13158,"byte_end":13169,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"name":"skip_to_end","qualname":"<Reader<'a>>::skip_to_end","value":"fn (&mut self) -> Input<'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":13474,"byte_end":13484,"line_start":338,"line_end":338,"column_start":12,"column_end":22},"name":"EndOfInput","qualname":"::EndOfInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type used to indicate the end of the input was reached before the\n operation could be completed.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":13463,"byte_end":13485,"line_start":338,"line_end":338,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":13463,"byte_end":13485,"line_start":338,"line_end":338,"column_start":1,"column_end":23}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":5703,"byte_end":5708,"line_start":125,"line_end":125,"column_start":10,"column_end":15},"kind":"Impl","from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":8276,"byte_end":8281,"line_start":191,"line_end":191,"column_start":39,"column_end":44},"kind":"Impl","from":{"krate":0,"index":74},"to":{"krate":1,"index":2258}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":8509,"byte_end":8514,"line_start":199,"line_end":199,"column_start":39,"column_end":44},"kind":"Impl","from":{"krate":0,"index":74},"to":{"krate":1,"index":2258}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":10270,"byte_end":10276,"line_start":253,"line_end":253,"column_start":10,"column_end":16},"kind":"Impl","from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,116,114,117,115,116,101,100,45,48,46,54,46,49,47,115,114,99,47,117,110,116,114,117,115,116,101,100,46,114,115],"byte_start":13712,"byte_end":13717,"line_start":349,"line_end":349,"column_start":14,"column_end":19},"kind":"Impl","from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}}]}