{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"sct","disambiguator":[2327045890108856459,3723521972003819327]},"crate_root":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src","external_crates":[{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2941988461341877381,8472300390439693338]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2153668756788574171,2288043478962111168]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":3,"id":{"name":"alloc","disambiguator":[2071417312717755849,11492198267815760392]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[2740323154819872826,1657005047258143774]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[10186673904286688438,2605771987977486664]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[531320120293637297,3994205924220671556]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14853310604380091786,6829468329683660009]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[9639871989543458626,12742274598358072568]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":9,"id":{"name":"alloc_jemalloc","disambiguator":[2885253331875378562,10684362770611127168]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[4215349770068598000,17955886968259767776]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":11,"id":{"name":"ring","disambiguator":[6495270312879144908,11202823247870969148]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[8955617907451615592,16745629818598895923]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","num":13,"id":{"name":"untrusted","disambiguator":[10385210579140820462,3402417110622996457]}}],"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8067,"line_start":1,"line_end":264,"column_start":1,"column_end":11}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8067,"line_start":1,"line_end":264,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/sct-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":68},{"krate":0,"index":64},{"krate":0,"index":60},{"krate":0,"index":58},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":48}],"decl_id":null,"docs":" # SCT.rs: SCT verification library\n This library implements verification of Signed Certificate Timestamps.\n These are third-party assurances that a particular certificate has\n been included in a Certificate Transparency log.","sig":null,"attributes":[{"value":"forbid(unsafe_code, unstable_features)","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":434,"byte_end":486,"line_start":11,"line_end":12,"column_start":1,"column_end":30}},{"value":"deny(trivial_casts,\n       trivial_numeric_casts,\n       missing_docs,\n       unused_import_braces,\n       unused_extern_crates,\n       unused_qualifications)","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":487,"byte_end":654,"line_start":13,"line_end":18,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":928,"byte_end":931,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"Log","qualname":"::Log","value":"Log { description, url, operated_by, key, id, max_merge_delay }","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Describes a CT log","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":55},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1045,"byte_end":1056,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"name":"description","qualname":"::Log::description","value":"&'a str","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" The operator's name/description of the log.\n This field is not used by the library.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":57},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1163,"byte_end":1166,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"url","qualname":"::Log::url","value":"&'a str","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" The certificate submission url.\n This field is not used by the library.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":59},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1272,"byte_end":1283,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"operated_by","qualname":"::Log::operated_by","value":"&'a str","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Which entity operates the log.\n This field is not used by the library.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":61},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1523,"byte_end":1526,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"name":"key","qualname":"::Log::key","value":"&'a [u8]","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Public key usable for verifying certificates.\n TODO: fixme format of this; should be a SPKI\n so the `id` is verifiable, but currently is a\n raw public key (like, an ECPoint or RSAPublicKey).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":63},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1619,"byte_end":1621,"line_start":50,"line_end":50,"column_start":9,"column_end":11},"name":"id","qualname":"::Log::id","value":"[u8; <unevaluated[]>]","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Key hash, which is SHA256 applied to the SPKI\n encoding.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1728,"byte_end":1743,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"max_merge_delay","qualname":"::Log::max_merge_delay","value":"usize","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" The log's maximum merge delay.\n This field is not used by the library.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":73},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1919,"byte_end":1931,"line_start":61,"line_end":61,"column_start":5,"column_end":17},"name":"MalformedSCT","qualname":"::Error::MalformedSCT","value":"Error::MalformedSCT","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The SCT was somehow misencoded, truncated or otherwise corrupt.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":75},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1986,"byte_end":2002,"line_start":64,"line_end":64,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The SCT contained an invalid signature.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":77},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2064,"byte_end":2081,"line_start":67,"line_end":67,"column_start":5,"column_end":22},"name":"TimestampInFuture","qualname":"::Error::TimestampInFuture","value":"Error::TimestampInFuture","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The SCT was signed in the future.  Clock skew?\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":79},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2153,"byte_end":2174,"line_start":70,"line_end":70,"column_start":5,"column_end":26},"name":"UnsupportedSCTVersion","qualname":"::Error::UnsupportedSCTVersion","value":"Error::UnsupportedSCTVersion","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The SCT had a version that this library does not handle.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":81},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2227,"byte_end":2237,"line_start":73,"line_end":73,"column_start":5,"column_end":15},"name":"UnknownLog","qualname":"::Error::UnknownLog","value":"Error::UnknownLog","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The SCT was refers to an unknown log.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1835,"byte_end":1840,"line_start":59,"line_end":59,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{MalformedSCT, InvalidSignature, TimestampInFuture, UnsupportedSCTVersion, UnknownLog}","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"decl_id":null,"docs":" How sct.rs reports errors.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1826,"byte_end":2240,"line_start":59,"line_end":74,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2621,"byte_end":2636,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"should_be_fatal","qualname":"<Error>::should_be_fatal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7607,"byte_end":7617,"line_start":243,"line_end":243,"column_start":8,"column_end":18},"name":"verify_sct","qualname":"::verify_sct","value":"fn (cert: &[u8], sct: &[u8], at_time: u64, logs: &[&Log]) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Verifies that the SCT `sct` (a `SignedCertificateTimestamp` encoding)\n is a correctly signed timestamp for `cert` (a DER-encoded X.509 end-entity\n certificate) valid `at_time`.  `logs` describe the CT logs trusted by\n the caller to sign such an SCT.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2247,"byte_end":2252,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":56},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,99,116,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4383,"byte_end":4386,"line_start":162,"line_end":162,"column_start":10,"column_end":13},"kind":"Impl","from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}}]}