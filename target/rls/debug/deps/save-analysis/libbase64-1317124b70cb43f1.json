{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"base64","disambiguator":[5739124045039851094,16795868967486539763]},"crate_root":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src","external_crates":[{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2941988461341877381,8472300390439693338]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2153668756788574171,2288043478962111168]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":3,"id":{"name":"alloc","disambiguator":[2071417312717755849,11492198267815760392]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[2740323154819872826,1657005047258143774]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[10186673904286688438,2605771987977486664]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[531320120293637297,3994205924220671556]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14853310604380091786,6829468329683660009]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[9639871989543458626,12742274598358072568]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":9,"id":{"name":"alloc_jemalloc","disambiguator":[2885253331875378562,10684362770611127168]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[4215349770068598000,17955886968259767776]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","num":11,"id":{"name":"byteorder","disambiguator":[7908934515695927593,14021233991595959473]}},{"file_name":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/line_wrap.rs","num":12,"id":{"name":"safemem","disambiguator":[8816856996277990597,3568095841013188925]}}],"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":6990,"line_start":1,"line_end":206,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3487,"byte_end":3493,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3495,"byte_end":3508,"line_start":71,"line_end":71,"column_start":26,"column_end":39},"name":"encode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3510,"byte_end":3527,"line_start":71,"line_end":71,"column_start":41,"column_end":58},"name":"encode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3529,"byte_end":3548,"line_start":71,"line_end":71,"column_start":60,"column_end":79},"name":"encode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3581,"byte_end":3587,"line_start":74,"line_end":74,"column_start":18,"column_end":24},"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3589,"byte_end":3602,"line_start":74,"line_end":74,"column_start":26,"column_end":39},"name":"decode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3604,"byte_end":3621,"line_start":74,"line_end":74,"column_start":41,"column_end":58},"name":"decode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3623,"byte_end":3642,"line_start":74,"line_end":74,"column_start":60,"column_end":79},"name":"decode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3644,"byte_end":3655,"line_start":74,"line_end":74,"column_start":81,"column_end":92},"name":"DecodeError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":6990,"line_start":1,"line_end":206,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":52},{"krate":0,"index":64},{"krate":0,"index":102},{"krate":0,"index":112},{"krate":0,"index":118},{"krate":0,"index":160},{"krate":0,"index":170},{"krate":0,"index":236},{"krate":0,"index":320},{"krate":0,"index":328},{"krate":0,"index":326},{"krate":0,"index":322},{"krate":0,"index":248},{"krate":0,"index":332},{"krate":0,"index":340},{"krate":0,"index":338},{"krate":0,"index":334},{"krate":0,"index":254},{"krate":0,"index":344},{"krate":0,"index":352},{"krate":0,"index":350},{"krate":0,"index":346},{"krate":0,"index":356},{"krate":0,"index":364},{"krate":0,"index":362},{"krate":0,"index":358},{"krate":0,"index":258},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"deny(missing_docs,\n       trivial_casts,\n       trivial_numeric_casts,\n       unused_extern_crates,\n       unused_import_braces,\n       unused_results,\n       variant_size_differences,\n       warnings)","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3150,"byte_end":3314,"line_start":58,"line_end":59,"column_start":1,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"/Users/halvorboe/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.0/src/display.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":18},{"krate":0,"index":24},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":274},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":46}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":103},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":7891,"byte_end":7908,"line_start":24,"line_end":24,"column_start":5,"column_end":22},"name":"InvalidLineLength","qualname":"::display::DisplayError::InvalidLineLength","value":"DisplayError::InvalidLineLength","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" If wrapping is configured, the line length must be a multiple of 4, and must not be absurdly\n large (currently capped at 1024, subject to change).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":272},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":7710,"byte_end":7722,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"DisplayError","qualname":"::display::DisplayError","value":"DisplayError::{InvalidLineLength}","parent":null,"children":[{"krate":0,"index":103}],"decl_id":null,"docs":" Errors that can occur initializing a Base64Display.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":8017,"byte_end":8030,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":8197,"byte_end":8208,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display<'a>>::with_config","value":"fn (bytes: &[u8], config: Config) -> Result<Base64Display, DisplayError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":8723,"byte_end":8731,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"standard","qualname":"<Base64Display<'a>>::standard","value":"fn (bytes: &[u8]) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":8963,"byte_end":8971,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"url_safe","qualname":"<Base64Display<'a>>::url_safe","value":"fn (bytes: &[u8]) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,99,104,117,110,107,101,100,95,101,110,99,111,100,101,114,46,114,115],"byte_start":37712,"byte_end":37717,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,101,110,99,111,100,101,46,114,115],"byte_start":69045,"byte_end":69051,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"fn <T> (input: &T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,101,110,99,111,100,101,46,114,115],"byte_start":69513,"byte_end":69526,"line_start":39,"line_end":39,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode::encode_config","value":"fn <T> (input: &T, config: Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":142},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,101,110,99,111,100,101,46,114,115],"byte_start":70337,"byte_end":70354,"line_start":68,"line_end":68,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode::encode_config_buf","value":"fn <T> (input: &T, config: Config, buf: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,101,110,99,111,100,101,46,114,115],"byte_start":71990,"byte_end":72009,"line_start":124,"line_end":124,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode::encode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":95763,"byte_end":95774,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::decode::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":123},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":95835,"byte_end":95848,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::decode::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":304},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":95653,"byte_end":95664,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::decode::DecodeError","value":"DecodeError::{InvalidByte, InvalidLength}","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":123}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":95644,"byte_end":95851,"line_start":23,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":96863,"byte_end":96869,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"fn <T> (input: &T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":220},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":97423,"byte_end":97436,"line_start":88,"line_end":88,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode::decode_config","value":"fn <T> (input: &T, config: Config) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":222},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":98280,"byte_end":98297,"line_start":118,"line_end":118,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode::decode_config_buf","value":"fn <T> (input: &T, config: Config, buffer: &mut Vec<u8>) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":99739,"byte_end":99758,"line_start":160,"line_end":160,"column_start":8,"column_end":27},"name":"decode_config_slice","qualname":"::decode::decode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input into the provided output slice.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":125},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3834,"byte_end":3842,"line_start":83,"line_end":83,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":127},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3902,"byte_end":3909,"line_start":85,"line_end":85,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":320},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3761,"byte_end":3773,"line_start":81,"line_end":81,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"CharacterSet::{Standard, UrlSafe}","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":127}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3752,"byte_end":3912,"line_start":81,"line_end":86,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":129},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4491,"byte_end":4493,"line_start":108,"line_end":108,"column_start":5,"column_end":7},"name":"LF","qualname":"::LineEnding::LF","value":"LineEnding::LF","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Unix-style \\n\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":131},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4526,"byte_end":4530,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::LineEnding::CRLF","value":"LineEnding::CRLF","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Windows-style \\r\\n\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":332},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4452,"byte_end":4462,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"name":"LineEnding","qualname":"::LineEnding","value":"LineEnding::{LF, CRLF}","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":131}],"decl_id":null,"docs":" Line ending used in optional line wrapping.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4443,"byte_end":4533,"line_start":106,"line_end":111,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":133},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4794,"byte_end":4800,"line_start":126,"line_end":126,"column_start":5,"column_end":11},"name":"NoWrap","qualname":"::LineWrap::NoWrap","value":"LineWrap::NoWrap","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Don't wrap.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":135},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4892,"byte_end":4896,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"Wrap","qualname":"::LineWrap::Wrap","value":"LineWrap::Wrap(usize, LineEnding)","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Wrap lines with the specified length and line ending. The length must be > 0.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":344},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4759,"byte_end":4767,"line_start":124,"line_end":124,"column_start":10,"column_end":18},"name":"LineWrap","qualname":"::LineWrap","value":"LineWrap::{NoWrap, Wrap}","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Line wrap configuration.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4750,"byte_end":4918,"line_start":124,"line_end":129,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5019,"byte_end":5025,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5008,"byte_end":5488,"line_start":133,"line_end":144,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5546,"byte_end":5549,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (char_set: CharacterSet, pad: bool, strip_whitespace: bool, input_line_wrap: LineWrap) -> Config","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":262},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6014,"byte_end":6022,"line_start":169,"line_end":169,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":264},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6215,"byte_end":6230,"line_start":177,"line_end":177,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":266},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6427,"byte_end":6431,"line_start":185,"line_end":185,"column_start":11,"column_end":15},"name":"MIME","qualname":"::MIME","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per standards for MIME encoded messages\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":268},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6639,"byte_end":6647,"line_start":193,"line_end":193,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":270},"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6838,"byte_end":6853,"line_start":201,"line_end":201,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3349,"byte_end":3356,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":8}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":8107,"byte_end":8120,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"kind":"Impl","from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":9122,"byte_end":9135,"line_start":59,"line_end":59,"column_start":22,"column_end":35},"kind":"Impl","from":{"krate":0,"index":30},"to":{"krate":2,"index":7246}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,105,115,112,108,97,121,46,114,115],"byte_start":9456,"byte_end":9469,"line_start":70,"line_end":70,"column_start":51,"column_end":64},"kind":"Impl","from":{"krate":0,"index":44},"to":{"krate":0,"index":84}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,99,104,117,110,107,101,100,95,101,110,99,111,100,101,114,46,114,115],"byte_start":38284,"byte_end":38298,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":"Impl","from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":95875,"byte_end":95886,"line_start":30,"line_end":30,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":0,"index":304},"to":{"krate":2,"index":7246}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,100,101,99,111,100,101,46,114,115],"byte_start":96250,"byte_end":96261,"line_start":41,"line_end":41,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":0,"index":304},"to":{"krate":1,"index":2452}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3919,"byte_end":3931,"line_start":88,"line_end":88,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4540,"byte_end":4550,"line_start":113,"line_end":113,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,97,108,118,111,114,98,111,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,57,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5495,"byte_end":5501,"line_start":146,"line_end":146,"column_start":6,"column_end":12},"kind":"Impl","from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}}]}